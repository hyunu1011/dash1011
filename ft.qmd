---
title: "기말"
author: "정현우"
format: dashboard
execute: 
  enabled: true
  cache: false
  freeze: false
  error: true
---

#1

```{python}
import numpy as np
import pandas as pd
import plotly.express as px
import plotly.io as pio
import json 
import requests 

pd.options.plotting.backend = "plotly"
pio.templates.default = "plotly_white"

df = pd.read_csv("https://raw.githubusercontent.com/guebin/DV2023/main/posts/NYCTaxi.csv").assign(
    log_trip_duration = lambda df: np.log(df.trip_duration),
    pickup_datetime = lambda df: df.pickup_datetime.apply(pd.to_datetime),
    dropoff_datetime = lambda df: df.dropoff_datetime.apply(pd.to_datetime),
    dist = lambda df: np.sqrt((df.pickup_latitude-df.dropoff_latitude)**2 + (df.pickup_longitude-df.dropoff_longitude)**2),
    #---#
    vendor_id = lambda df: df.vendor_id.map({1:'A',2:'B'})
).assign(
    speed = lambda df: df.dist / df.trip_duration,
    pickup_hour = lambda df: df.pickup_datetime.dt.hour,
    dropoff_hour = lambda df: df.dropoff_datetime.dt.hour,
    dayofweek = lambda df: df.pickup_datetime.dt.dayofweek
)
df_small = df[::100].reset_index(drop=True)

a = {0:'월',1:'화',2:'수',3:'목',4:'금',5:'토',6:'일'}
df_small['dayofweek']=df_small['dayofweek'].replace(a)
df_small['dayofweek']

tidydata = df.pivot_table(
    index = 'pickup_hour',
    columns = 'dayofweek',
    values = 'speed',
    aggfunc = 'mean'
).stack().reset_index().rename({0:'speed_mean'},axis=1)
fig=px.density_heatmap(
    data_frame=tidydata,
    x='pickup_hour',
    y='dayofweek',
    z='speed_mean',
    nbinsx=24,
    nbinsy=7,
    height=300)
fig.update_layout(
    xaxis_title='pickup 시간',
    yaxis_title='요일',
    coloraxis_colorbar_title='평균속력'
)
```

## Column {width=50%}

#2

```{python}
tidydata2 = df.pivot_table(
    index = 'pickup_hour',
    columns = 'dayofweek',
    values = 'dist',
    aggfunc = 'mean'
).stack().reset_index().rename({0:'dist_mean'},axis=1)
fig2=px.density_heatmap(
    data_frame=tidydata2,
    x='pickup_hour',
    y='dayofweek',
    z='dist_mean',
    nbinsx=24,
    nbinsy=7,
    height=300)
fig2.update_layout(
    xaxis_title='pickup 시간',
    yaxis_title='요일',
    coloraxis_colorbar_title='평균이동거리'
)
```

## Column {width=50%}

#3 {orientation="columns" scrolling="true"}

```{python}
pcol = ['pickup_datetime', 'pickup_longitude', 'pickup_latitude', 'pickup_hour']
dcol = ['dropoff_datetime', 'dropoff_longitude', 'dropoff_latitude', 'dropoff_hour']
def transform(df):
    pickup = df.loc[:,['id']+pcol].set_axis(['id', 'datetime', 'longitude', 'latitude', 'hour'],axis=1).assign(type = 'pickup')
    dropoff = df.loc[:,['id']+dcol].set_axis(['id', 'datetime', 'longitude', 'latitude', 'hour'],axis=1).assign(type = 'dropoff')
    return pd.concat([pickup,dropoff],axis=0)
df_left = df_small.drop(pcol+dcol,axis=1)
df_right = pd.concat([transform(df) for i, df in df_small.groupby('id')]).reset_index(drop=True)
df_small2 = df_left.merge(df_right)

tidydata3 = df_small2.assign(
    평균속력 = pd.qcut(df_small2.speed,4,labels=['매우느림 (path)','조금느림 (path)','조금빠름 (path)','매우빠름 (path)'])
).sort_values('평균속력')
fig4 = px.line_mapbox(
    data_frame=tidydata3,
    lat = 'latitude',
    lon = 'longitude',
    line_group = 'id',
    color = '평균속력',
    center = {'lat':40.7322, 'lon':-73.9052},
    #---#
    mapbox_style = 'carto-positron',
    zoom=11
)
scatter_data = px.scatter_mapbox(
    data_frame=tidydata3,
    lat = 'latitude',
    lon = 'longitude',
    size = 'passenger_count',
    size_max = 10,
    color = '평균속력',
    #---#
    mapbox_style = 'carto-positron',
    zoom=11   
).data 
for sd in scatter_data: 
    fig4.add_trace(sd)
    sd.name = '(pickup/dropoff)' 
    
fig4.data[146].name = '매우느림 (pickup/dropoff)'
fig4.data[147].name = '조금느림 (pickup/dropoff)'
fig4.data[148].name = '조금빠름 (pickup/dropoff)'
fig4.data[149].name = '매우빠름 (pickup/dropoff)'

fig4.update_traces(
    line={
        'width':1
    },
    opacity=0.8
)

fig4.show(config={'scrollZoom':False})

```